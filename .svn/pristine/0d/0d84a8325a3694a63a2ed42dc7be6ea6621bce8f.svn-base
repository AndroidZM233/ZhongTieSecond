package com.speedata.fragment;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.speedata.activity.base.IBaseScanFragment;
import com.speedata.activity.print.PrintTab;
import com.speedata.adapter.OutListAdapter;
import com.speedata.bean.CommonLabour;
import com.speedata.bean.MyDateAndTime;
import com.speedata.bean.OutRegister;
import com.speedata.bean.StoreBean;
import com.speedata.dao.CommonLabourDao;
import com.speedata.dao.CommonMaterialInfoDao;
import com.speedata.dao.CommonSupplierDao;
import com.speedata.dao.InRegisterDao;
import com.speedata.dao.OutRegisterDao;
import com.speedata.dao.StoreDao;
import com.speedata.dreamdemo.R;
import com.speedata.utils.MyLogger;
import com.speedata.utils.ScanUtil;
import com.speedata.view.SelectDateDialog;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import static com.speedata.dreamdemo.R.id.actv1;

/**
 * Created by Administrator on 2016/4/7.
 */
public class OutRegisterFragment extends BaseFragment implements View.OnClickListener,
        IBaseScanFragment {
    private MyLogger logger = MyLogger.jLog();
    private List<StoreBean> storeTempList = new ArrayList<StoreBean>();
    private List<StoreBean> storeList = new ArrayList<StoreBean>();
    private CommonSupplierDao commonSupplierDao;
    private InRegisterDao inRegisterDao;
    private List<CommonLabour> supperList;
    private ListView listView;
    private OutListAdapter outListAdapter;
    private EditText edvProjectName, edvPrintNumber,
            edv_CKNodebh, edv_Quantity, edv_Remark, edvTime;
    private TextView tv_RequisitionDate, edv_InfoName, edv_InfoCode,
            edv_InfoModel, edv_InfoUnit, tvQuantity;
    private ArrayAdapter<String> supperAdapter;
    private String[] suppers;
//    private Spinner spinnerSupper;
    private CommonLabour commonLabour;
    private CommonLabourDao commonLabourDao;
    private Button btnRegister;
    private EditText edvBarcode;
    private StoreDao storeDao;
    private OutRegisterDao outRegisterDao;
    private OutRegister outRegister;
    private AutoCompleteTextView autoCompleteTextView;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        initDB();
    }

    private void initDB() {
        commonSupplierDao = new CommonSupplierDao(mActivity);
        storeDao = new StoreDao(mActivity);
        inRegisterDao = new InRegisterDao(mActivity);
        outRegister = new OutRegister();
        outRegisterDao = new OutRegisterDao(mActivity);
    }

    @Override
    public int setFragmentLayout() {
        return R.layout.fragment_out_register;
    }

    @Override
    public void findById(View view) {
        mActivity.setTitle("发料");
        edvBarcode = (EditText) view.findViewById(R.id.edv_BarCode);
        btnRegister = (Button) view.findViewById(R.id.btn_register);
        btnRegister.setOnClickListener(this);
        edv_InfoName = (TextView) view.findViewById(R.id.edv_InfoName);
        edv_InfoCode = (TextView) view.findViewById(R.id.edv_InfoCode);
        edv_InfoModel = (TextView) view.findViewById(R.id.edv_InfoModel);
        edv_InfoUnit = (TextView) view.findViewById(R.id.edv_InfoUnit);
        edv_Quantity = (EditText) view.findViewById(R.id.edv_Quantity);
        edv_Quantity.setFocusable(true);//这个和下面的这个命令必须要设置了，才能监听back事件。
        edv_Quantity.setFocusableInTouchMode(true);
        edv_Quantity.setOnKeyListener(onKeyListener);
        edvPrintNumber = (EditText) view.findViewById(R.id.edv_printNumber);
        tvQuantity = (TextView) view.findViewById(R.id.tv_Quantity);
        tv_RequisitionDate = (TextView) view.findViewById(R.id.edv_RequisitionDate);
        tv_RequisitionDate.setOnClickListener(this);
        tv_RequisitionDate.setText(MyDateAndTime.getTimeString("yyyy-MM-dd"));
        edv_Remark = (EditText) view.findViewById(R.id.edv_Remark);
        edv_Remark.setFocusable(true);
        edv_Remark.setFocusableInTouchMode(true);
        edv_Remark.setOnKeyListener(onKeyListener);
        commonLabour = new CommonLabour();
        commonLabourDao = new CommonLabourDao(mActivity);
        supperList = commonLabourDao.imRawQuery("select distinct LabourName,LabourNM from commonLabour"
                , null, CommonLabour.class);//查询所有用料单位
        if (supperList == null || supperList.size() == 0) {
            Toast.makeText(mActivity, "无用料单位信息，请先进行下载!", Toast.LENGTH_SHORT).show();
        }
        suppers = new String[supperList.size()];
        for (int i = 0; i < supperList.size(); i++) {
            suppers[i] = supperList.get(i).getLabourName();
        }

        autoCompleteTextView= (AutoCompleteTextView) view.findViewById(actv1);
        List<CommonLabour> commonLabours = commonLabourDao
                .imRawQuery("select LabourName from commonLabour"
                        , null, CommonLabour.class);
        String[] labourStr=new String[commonLabours.size()];
        for (int i = 0; i < commonLabours.size(); i++) {
            labourStr[i]=commonLabours.get(i).getLabourName();
        }
        ArrayAdapter arrayAdapter=new ArrayAdapter(mActivity,android.R.layout.simple_list_item_1,
                labourStr);
        autoCompleteTextView.setAdapter(arrayAdapter);
        autoCompleteTextView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                autoCompleteTextView.showDropDown();
                return false;
            }
        });
        autoCompleteTextView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                edvBarcode.setFocusable(true);
                edvBarcode.setFocusableInTouchMode(true);
                edvBarcode.requestFocus();
            }
        });


//        spinnerSupper = (Spinner) view.findViewById(R.id.sp_user);
        supperAdapter = new ArrayAdapter<String>(mActivity, android.R.layout
                .simple_dropdown_item_1line, suppers);
//        spinnerSupper.setAdapter(supperAdapter);
//        spinnerSupper.setSelection(mActivity.sharedPreferences.getInt("outSelection", 0));
//        spinnerSupper.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
//            @Override
//            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
//                mActivity.sharedPreferences.edit().putInt("outSelection", position).commit();
//            }
//
//            @Override
//            public void onNothingSelected(AdapterView<?> parent) {
//
//            }
//        });

    }

    @Override
    public void onClick(View v) {
        if (tv_RequisitionDate == v) {
            SelectDateDialog dateDialog = new SelectDateDialog(mActivity, new SelectDateDialog
                    .ShowDate() {
                @Override
                public void showDate(String time) {
                    tv_RequisitionDate.setText(time);
                }
            }, tv_RequisitionDate.getText().toString());
            dateDialog.show();
        } else if (v == btnRegister) {
            if (edv_Quantity.getText().toString().equals("")) {
                Toast.makeText(mActivity, "请输入数量", Toast.LENGTH_SHORT).show();
                return;
            }

            double inputQuantity = Double.parseDouble(edv_Quantity.getText().toString());
            String result = String .format("%.4f", inputQuantity);
            double resultQuantity=Double.parseDouble(result);
            Double oldQuantity = Double.parseDouble(tvQuantity.getText().toString());
            if (resultQuantity > oldQuantity) {
                mActivity.alertMessage("当前最大出库量为：" + oldQuantity);
                edv_Quantity.setText(oldQuantity+"");
                return;
            }
            if (storeBean == null) {
                mActivity.showMessage("请先扫描条码");
                return;
            }
            String timeString = MyDateAndTime.getTimeString();
            outRegister.setOrderTime(timeString);
            outRegister.setInfoCode(edv_InfoCode.getText().toString());
            outRegister.setInfoModel(edv_InfoModel.getText().toString());
            outRegister.setInfoName(edv_InfoName.getText().toString());
            outRegister.setInfoUnit(edv_InfoUnit.getText().toString());
//            String labourName = supperList.get(spinnerSupper
//                    .getSelectedItemPosition()).getLabourName();
            String labourName = autoCompleteTextView.getText().toString();
            if (TextUtils.isEmpty(labourName)){
                showToast("请选择用料单位");
                return;
            }
            outRegister.setLabourName(labourName);
//            String labourNM=supperList.get(spinnerSupper
//                    .getSelectedItemPosition()).getLabourNM();
            List<CommonLabour> commonLabours = commonLabourDao
                    .imRawQuery("select LabourNM from commonLabour where LabourName = ?"
                            , new String[]{labourName}, CommonLabour.class);
            String labourNM = commonLabours.get(0).getLabourNM();
            outRegister.setLabourNM(labourNM);
            outRegister.setRemark(edv_Remark.getText().toString());
            outRegister.setQuantity(resultQuantity);
            outRegister.setOrderDate(tv_RequisitionDate.getText().toString());
            outRegister.setBarCode(mBarcode);
            outRegister.setProjectID(mActivity.ProjectID);
            outRegister.setInfoName(storeBean.getInfoName());
            String infoUnit = storeBean.getInfoUnit();
            outRegister.setInfoUnit(infoUnit);
            outRegister.setInfoModel(storeBean.getInfoModel());
            UUID uuid=UUID.randomUUID();
            outRegister.setItemNM(String.valueOf(uuid));
            outRegister.setInfoClassNodebh(storeBean.getInfoClassNodebh());
            outRegister.setInfoClassName(storeBean.getInfoClassName());
            outRegister.setFirstClassName(storeBean.getFirstClassName());
            outRegister.setSecondClassName(storeBean.getSecondClassName());
            outRegisterDao.imInsert(outRegister,false);

            Double newQuantity = oldQuantity - resultQuantity;
            String newResult = String.format("%.4f", newQuantity);
            storeDao.execSql("update store set Quantity=? where BarCode=? "
                    , new String[]{newResult, mBarcode});
            Toast.makeText(mActivity, "出库成功", Toast.LENGTH_LONG).show();
            String printCountString = edvPrintNumber.getText().toString();
            if (!"".equals(printCountString)) {
                int printCount = Integer.parseInt(printCountString);
                if (printCount > 0) {
//                    mActivity.printOutLable(mActivity.ProjectName, spinnerSupper.getSelectedItem().toString(),
//                            edv_InfoName.getText().toString(), edv_InfoModel.getText().toString(),
//                            String.valueOf(resultQuantity)+" 单位："+infoUnit, mBarcode, timeString, printCount);
                    PrintTab printTab=new PrintTab();
                    printTab.printOutTabCPCL(mActivity.context,mActivity.ProjectName, autoCompleteTextView.getText().toString(),
                            edv_InfoName.getText().toString(), edv_InfoModel.getText().toString(),
                            String.valueOf(resultQuantity) + " 单位：" + infoUnit, mBarcode, timeString, printCount);
                }
            }
            clearUI();
            edvBarcode.setFocusable(true);
            edvBarcode.setFocusableInTouchMode(true);
            edvBarcode.requestFocus();
        }
    }

    public CommonMaterialInfoDao commonMaterialInfom;
    private void clearUI() {
        edv_InfoCode.setText("");
        edv_InfoModel.setText("");
        edv_InfoName.setText("");
        edv_InfoUnit.setText("");
        tvQuantity.setText("");
        edv_Remark.setText("");
        edv_Quantity.setText("");
        edvBarcode.setText("");
    }
    private ScanUtil scanUtil;

    @Override
    public void onResume() {
        super.onResume();
        scanUtil = new ScanUtil(mActivity);
        scanUtil.setOnScanListener(new ScanUtil.OnScanListener() {

            @Override
            public void getBarcode(String barcode) {
                onGetBarcode(barcode);
            }
        });
    }

    @Override
    public void onPause() {
        scanUtil.stopScan();
        super.onPause();
    }


    //TODO 获取条码
    private String mBarcode;


    private StoreBean storeBean;

    @Override
    public void onGetBarcode(String barcode) {
        mBarcode = barcode.replace("\n","");
        mBarcode = mBarcode.replace("\r","");
        mBarcode = mBarcode.replace("\u0000","");

        try {
            List<StoreBean> tempStore = storeDao.imQueryList("BarCode=?", new String[]{mBarcode});
            edvBarcode.setText(mBarcode);
            if (tempStore.size() > 0) {
                storeBean = tempStore.get(0);
                setUI(storeBean);
            }
        } catch (Exception e) {
            Toast.makeText(mActivity, "条码不匹配", Toast.LENGTH_SHORT).show();
            edvBarcode.setText("");
        }

        edv_Quantity.setFocusable(true);
        edv_Quantity.setFocusableInTouchMode(true);
        edv_Quantity.requestFocus();
    }

    private double Quantity = 0.0;

    private void setUI(StoreBean storeBean) {
        edv_InfoName.setText(storeBean.getInfoName());
        edv_InfoCode.setText(storeBean.getInfoCode());
        edv_InfoModel.setText(storeBean.getInfoModel());
        edv_InfoUnit.setText(storeBean.getInfoUnit());
        edv_Remark.setText(storeBean.getRemark());
        Quantity = storeBean.getQuantity();
        tvQuantity.setText(Quantity + "");
    }

    private View.OnKeyListener onKeyListener = new View.OnKeyListener() {
        @Override
        public boolean onKey(View v, int keyCode, KeyEvent event) {
            if (event.getAction()==KeyEvent.ACTION_DOWN){
                if (keyCode==KeyEvent.KEYCODE_F4){
                    edv_Quantity.setText("");
                    edv_Remark.setText("");
                    return true;
                }
            }
            return false;
        }
    };
}
